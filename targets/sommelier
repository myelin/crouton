#!/bin/sh -e
# Copyright (c) 2016 The crouton Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.
REQUIRES='core'
DESCRIPTION="Support Wayland pass-through to Chrome via Sommelier."
. "${TARGETSDIR:="$PWD"}/common"

### Append to prepare.sh:

# Fetch Sommelier source

install --minimal git

SOMMELIERBUILDTMP="`mktemp -d crouton-sommelier.XXXXXX --tmpdir=/tmp`"
addtrap "rm -rf --one-file-system '$SOMMELIERBUILDTMP'"

cd "$SOMMELIERBUILDTMP"
git clone --depth 1 https://chromium.googlesource.com/chromiumos/platform2

build_sommelier() {

  # Install Sommelier dependencies
  # TODO some of these may be build deps, and should use "asdeps"
  install --minimal debhelper libepoxy-dev libpixman-1-dev libssl-dev \
      libxfont-dev libxkbfile-dev x11proto-dev xfonts-utils xutils-dev \
      libbsd-dev libffi-dev libglvnd-dev libx11-dev libx11-xcb-dev \
      libxcb1-dev libxcb-dri2-0-dev libxcb-dri3-dev libxcb-glx0-dev \
      libxcb-present-dev libxcb-shm0-dev libxdamage-dev libexpat-dev \
      libxext-dev libxrandr-dev libxshmfence-dev libxxf86vm-dev libz-dev \
      llvm-9 wayland-protocols libgl1-mesa-dri libnvidia-egl-wayland-dev \
      libxcb-xinput-dev libxcb-damage0-dev libxcb-composite0-dev \
      libxkbcommon-dev mesa-utils xwayland libwayland-bin \
      libdrm-dev libgbm-dev libgcrypt20-dev libgpg-error-dev libpciaccess-dev \
      libwayland-dev libxv-dev mesa-common-dev meson ninja-build \
      pkg-config cmake python3-jinja2 libevdev-dev libgtest-dev
  # TODO sort list

  # Start subshell for compilation
  (
    cd "$SOMMELIERBUILDTMP"

    cd platform2/vm_tools/sommelier
    meson setup . _build \
        -Dgamepad=true \
        -Dcommit_loop_fix=true \
        -Dblack_screen_fix=true \
        -Dxwayland_path=/usr/bin/Xwayland \
        -Dxwayland_gl_driver_path=/usr/lib/x86_64-linux-gnu/dri
    meson configure _build
    ninja -C _build

    echo "Installing Sommelier..." 1>&2
    /usr/bin/install _build/sommelier /usr/local/bin/
  ) # End compilation subshell
}

build_sommelier

TIPS="$TIPS
Test sommelier by running glxinfo -B like this; it should show you the system's accelerated driver.
Replace glxinfo -B below with /bin/bash to get a shell with \$DISPLAY set properly, then try
something like steam -no-cef-sandbox.

sommelier \\
    --display=/run/chrome/wayland-0 \\
    --noop-driver \\
    --force-drm-device=/dev/dri/renderD128 \\
    -X \\
    --glamor \\
    -- \\
    glxinfo -B
"
